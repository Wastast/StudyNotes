1.编译的基本原理:
      编译会进行三个步骤: 词法分析-->语法分析-->代码生成
      词法分析: 该阶段主要是将代码(字符串)拆分成有意义的代码块(字符),这些代码块被称为词法单元
      语法分析: 将词法分析的数据流转换成一个由元素嵌套组合成的程序结构树(AST:抽象语法树)
      代码生成: 该阶段是将AST(抽象语法树)转换成机器指令
2.什么是LHS和RHS
      LHS：赋值的左侧查询 如果查找的目的是对变量进行赋值(找到值)就会进行LHS查询，LHS类型引用错误会抛出TypeError
      RHS：赋值的右侧查询 如果查找的目的是找到变量的值，就会进行RHS查询 return a+b; 找到a和b变量的值，在进行相加
            不成功的RHS查询，会导致抛出ReferenceError异常
                
1.作用域的概念：每一段代码都执行在一个环境中，环境里有不同的变量名字，而限定这个名字的可用性范围就是作用域
      这个环境可以比喻成我们的朋友圈每一个变量都是我们朋友圈的朋友，而且还有独一无二的名字，当有朋友
      在这个朋友圈里需求帮助的时候，直接报上名号，我们认识就给其帮助(函数的使用等等)
      没听说过名字就代表不存在，显示undefined(不存在).main函数相当于一个社会(学校，培训班等等)
      在这个大群体里的各种小群体，称之为函数，函数(小群体也有自己的作用域，作用域里面也有几个名字独一无二的人)
      如果你的名字(变量)没出现在这个函数或者main函数中，就会显示不存在，当然，在函数里的变量，出了函数
      就不认识了，就跟小群体里的各个人都是熟悉的，但是在大群体里的人却不认识，但大群体里声明的变量(全局变量)
      就相当于马云，马化腾这些名人一样，被人熟知(所以函数里可以调用上级作用域的变量(因为认识)，但上级作用域无法调用
      下级作用域的变量，因为不认识)

